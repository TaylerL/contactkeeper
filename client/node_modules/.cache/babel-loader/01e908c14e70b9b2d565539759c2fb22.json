{"ast":null,"code":"var _jsxFileName = \"/Users/taylerlegrair/Desktop/contact-keeper/client/src/context/alert/AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = [];\n  const [state, dispatch] = useReducer(alertReducer, initialState); //  Set Alert\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/Users/taylerlegrair/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuid","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","payload","setTimeout","alerts","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,YAAD,EAAeK,YAAf,CAApC,CAH0B,CAK1B;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC9C,UAAMC,EAAE,GAAGd,IAAI,EAAf;AACAS,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBY,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAA5B,KAAD,CAAR;AAEAE,IAAAA,UAAU,CAAC,MAAMP,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBW,MAAAA,OAAO,EAAED;AAA/B,KAAD,CAAf,EAAsDD,OAAtD,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAET,KADH;AAELE,MAAAA;AAFK,KADT;AAAA,cAMGJ,KAAK,CAACY;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvBD;;GAAMb,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  //  Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({ type: SET_ALERT, payload: { msg, type, id } });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}